#!/bin/bash

set -e -u

self="$(realpath "${BASH_SOURCE[-1]}")"
if [[ $self == ${SSH_ASKPASS-} ]]; then
	IFS= read -r ssh_password
	printf '%s\n' "$ssh_password"
	exit 0
fi

cd "$HOME/.local/hsetup/ssh-agent-keys"
readonly key_group_dir_prefix="key-group-"

get_key_group_socket() {
	local key_group_dir="$1"
	local dir_name="${key_group_dir##*/}"
	local group_name="${key_group_dir##$key_group_dir_prefix}"
	R="$XDG_RUNTIME_DIR/ssh-agent-$group_name.socket"
}

if [[ ${1-} == --start-agents ]]; then
	shift
	rm -f "$SSH_AUTH_SOCK"
	/usr/bin/ssh-agent -a "$SSH_AUTH_SOCK" > /dev/null
	for key_group in "$key_group_dir_prefix"*; do
		get_key_group_socket "$key_group"
		socket="$R"
		rm -f "$socket"
		/usr/bin/ssh-agent -a "$socket" > /dev/null
	done
	exit 0
fi

if ! systemctl --user is-active -q ssh-agent; then
	if systemctl --user is-failed -q ssh-agent; then
		systemctl --user reset-failed ssh-agent
	fi

	systemd-run --user --unit ssh-agent --service-type forking \
		-E SSH_AUTH_SOCK="$SSH_AUTH_SOCK" "$self" --start-agents
fi

ssh_password=
shopt -s nullglob

ensure_agent_keys() {
	local key_dir="$1"
	local socket="$2"
	SSH_AUTH_SOCK="$socket" ssh-add -l > /dev/null && return 0
	local keys=("$key_dir"/*_key)
	if let ${#keys[@]}; then
		if [[ -z $ssh_password ]]; then
			ssh_password="$(u-kit ask-password -t "ssh keys" -p password_hash)"
		fi
		SSH_ASKPASS="$self" SSH_AUTH_SOCK="$socket" ssh-add "${keys[@]}" <<< "$ssh_password"
	fi
}

ensure_agent_keys . "$SSH_AUTH_SOCK"
for key_group in "$key_group_dir_prefix"*; do
	get_key_group_socket "$key_group"
	ensure_agent_keys "$key_group" "$R"
done
