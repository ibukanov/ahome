#!/bin/bash

set -e -u

if test $# -eq 0; then 
    output="$HOME/.env"
elif test $# -eq 1; then 
    output="$1"
else
    echo "Bad usage: 0 or 1 argument expected"; exit 1
fi

path_value="$HOME/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin"
env=()

path_dir() {
    for dir in "$@"; do
	if [[ -n "$dir" ]]; then
	    if [[ "${dir:0:2}" == "~/" ]]; then
		dir=$HOME${dir:1}
	    fi
	    if [[ -d "$dir" ]]; then
		path_value+=":$dir"
	    fi
	fi
    done
    return 0
}

env_dir() {
    local name=$1 dir="$2"
    if [[ "${dir:0:2}" == "~/" ]]; then
	dir=$HOME${dir:1}
    fi
    if [[ -d "$dir" ]]; then
	env+=("$name" "$dir")
    fi
}

#git="$(which git 2>/dev/null)"
#if [[ $? -eq 0 ]]; then
#    path_dir "$($git --exec-path)"
#fi

platform="$(uname -i)"

path_dir ~/opt/$platform/rust*/bin

path_dir "~/opt/$platform/rust/bin"

path_dir "~/opt/virgil/bin"

path_dir "~/opt/node/bin"

path_dir "~/node_modules/.bin"

env_dir TEXINPUTS "~/a/dev/tex_lib"

env_dir ELM_HOME "~/node_modules/elm/share"

env_dir PERL5LIB "~/a/perl/mylib"

cygopt=/cygdrive/c/opt
if test -d "$cygopt"; then
    if test -d "$cygopt/jdk8"; then
	path_dir "$cygopt/jdk8/bin"
    else
	path_dir "$cygopt/jdk7/bin"
    fi
    path_dir "$cygopt/ant/bin"
    path_dir "$cygopt/haskell/bin"
    path_dir "$cygopt/haskell/lib/extralibs/bin"
    path_dir "$cygopt/nodejs"

    win_home="$(cygpath -u "$USERPROFILE")"
    path_dir "$win_home/AppData/Roaming/npm"
    path_dir "$win_home/node_modules/.bin"

    path_dir "$cygopt/go/bin"
    env+=(GOROOT "$(cygpath -w "$cygopt/go")")
    env+=(GOPATH "$(cygpath -w "$HOME/gocode")")
    
else
    path_dir "$HOME/opt/$platform/jdk1.7/bin"
    env+=(GOPATH "$HOME/gocode")
fi


env+=(PATH "$path_value")

s=""
NL=$'\n'

for ((i=0; i<${#env[@]}; i+=2)); do
    s+="export ${env[$i]}=$(printf %q ${env[$((i+1))]})$NL"
done

printf %s "$s" > $output

printf "Copied into %s:\n%s" "$output" "$s"
