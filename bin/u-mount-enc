#!/usr/bin/perl -w

use strict;

my $home = $ENV{HOME};
my $enc = "$home/enc";
die "not mounting: $enc does not exist\n" unless -d $enc;

my @command=("encfs", "$home/a/private", $enc);

if (-t STDIN) {
    # To prevent passsword echo under the Emacs shell, read the
    # password using bash builtin with the single word 'password' as a
    # prompt. Emacs recognize that and hide the password.  Then pass
    # the result it to encfs via stdin.
    if ($ENV{TERM} eq "dumb" && $ENV{EMACS}) {
	my $password = qx(bash -c 'read -p "password: " -s && echo \$REPLY');
	die "Failed to read the password\n" unless "$password";
        print "\n";
        push @command, "--stdinpass";
	defined(open PIPE, "|-", @command) || die "failed to run encfs: $!\n";
	syswrite PIPE, $password;
	close PIPE;
	exit 0;
    }
} else {
    my $askpass = $ENV{SSH_ASKPASS};
    push @command, "--extpass=$askpass" if $askpass && -x $askpass;
}

push @command, "--idle=60";

exec @command;
