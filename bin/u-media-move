#!/usr/bin/python

from __future__ import print_function

import argparse
import locale
import os
import os.path
import sys
import time

def warn(message):
    print(message, file=sys.stdout)

def info(message):
    print(message, file=sys.stdout)


def get_move_list(dir_path):
    to_move = []
    for name in os.listdir(dir_path):
        path = os.path.join(dir_path, name)
        if os.path.isfile(path):
            to_move.append(path)
    return to_move

def move_files(source_dirs, destination_dir):
    dirs_map = {}
    
    for source_dir in source_dirs:
        for path in get_move_list(source_dir):
            mtime = os.path.getmtime(path)
            timed_dir_name = time.strftime(args.timestamp, time.gmtime(mtime))
            dir_files = dirs_map.get(timed_dir_name)
            if dir_files is None:
                dir_files = []
                dirs_map[timed_dir_name] = dir_files
            dir_files.append(path)
    
    for timed_dir_name, dir_files in dirs_map.iteritems():
        dir_path = os.path.join(destination_dir, timed_dir_name)
        if not os.path.isdir(dir_path) and not args.dry_run:
            os.mkdir(dir_path)
        info("Moving {1} files to {0}".format(dir_path, len(dir_files)))
        for path in dir_files: 
            destination = os.path.join(dir_path, os.path.basename(path))
            if os.path.exists(destination):
                warn("Skipping {0} - destination file exists in {1}".format(path, dir_path))
            elif not args.dry_run:
                os.rename(path, destination)


def existing_dir_arg(dir_arg):
    if os.path.isdir(dir_arg):
        return dir_arg
    if os.path.exists(dir_arg):
        msg = "{0} is not a directory"
    else:
        msg = "directory {0} does not exist"
    raise argparse.ArgumentTypeError(msg.format(dir_arg))
    

parser = argparse.ArgumentParser(description='Move files into timestamped folders')
parser.add_argument('-n', '--dry-run', action='store_true', help='perform a trial run with no changes made')
parser.add_argument('--timestamp', action='store', default='%Yw%W.%m-%b',
                    help='timestamp to use for media directories in the destination dir'
                    ' (default: %(default)s)')
parser.add_argument('destination_dir', type=existing_dir_arg)
parser.add_argument('source_dir_list', metavar='source_dir',
                    type=existing_dir_arg, nargs='*', default='.')

args = parser.parse_args()

if args.dry_run:
    info("Dry run - no operations that change files or directories are performed");
locale.setlocale(locale.LC_ALL, 'C');
move_files(args.source_dir_list, args.destination_dir)
    


