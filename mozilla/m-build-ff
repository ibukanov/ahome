#!/bin/bash

fail() {
  echo "$@" 1>&2 
  exit 1
}


test $# -lt 2 && fail "Usage: $0 dir build_type [build_dir]"

dir="$1"
build_type="$2"
shift 2

root="$HOME/m"
tree="$root/$dir"
test -d "$tree" || fail "Cannot locate '$dir' in $root"

arch=
case "$build_type" in
    *32 ) arch=32 type="${build_type%$arch}" ;;
    *64 ) arch=64 type="${build_type%$arch}" ;;
    * ) type="$build_type" ;;
esac

case "$type" in
  dbg | opt ) ;;
  * ) fail "Unknown build type: $type" ;;
esac

build_dir_name="$dir$type"
if test -n "$arch"; then
   build_dir_name="$build_dir_name$arch"
fi 

build_dir="$HOME/b/ff/$build_dir_name"

case "$(uname)" in
    Darwin ) cpu_count=$(sysctl -n hw.ncpu) ;;
    Linux ) cpu_count=$(cat /proc/cpuinfo | grep '^processor' | wc -l) ;;
    * ) cpu_count=2 ;;
esac
load_factor="$(echo "scale=1; $cpu_count * 1.2" | bc)"
parallel="-j $(($cpu_count * 3 / 2)) -l $load_factor"

if test $# -eq 0; then
    export MY_MOZILLA_NAME="$dir"
    export MY_MOZILLA_TYPE="$type"
    export MY_MOZILLA_ARCH="$arch"
    export MY_MOZILLA_BUILD_DIR="$build_dir"
    export MOZCONFIG="$HOME/a/mozilla/ff-config"
    cmd=(make -C "$tree" -f client.mk MOZ_MAKE_FLAGS="-s $parallel" build)

elif test -d "$tree/$1"; then
    dir="$build_dir/$1"
    shift;
    cmd=(make -C "$dir" $parallel -s "$@")
else
    fail "$1 is not a directory under $tree"
fi

echo "${cmd[@]}"

time "${cmd[@]}"
